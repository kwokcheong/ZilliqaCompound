{"version":3,"sources":["components/Header.js","components/ZilliqaTable.js","components/ZilliqaRecord.js","components/ZilliqaCompound.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","ZilliqaTable","tableData","headingColumns","breakOn","tableClass","data","map","row","index","rowData","i","key","push","val","data-heading","Table","striped","bordered","hover","variant","col","ZilliqaRecord","props","item","compoundWeekly","zilPerDay","zilPerWeek","zilPerMonth","serializedData","length","parseInt","JsonSerializer","ZilliqaCompound","handleCapital","e","setState","capital","target","value","handleWeeks","weeks","handleApy","apy","zilliqaPerDay","toFixed","zilliqaPerWeek","zilliqaPerMonth","zilliqaCompoundWeekly","sum","compounded","perDay","perWeek","perMonth","Math","pow","prevState","results","compileForm","preventDefault","parseFloat","state","clearList","total","onSubmit","this","type","placeholder","onChange","Button","onClick","Component","App","todosCopy","todos","slice","currentTodo","deleteTodo","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fdbed75.chunk.js","sourcesContent":["import React from 'react'\r\nimport { propTypes } from 'react-bootstrap/esm/Image'\r\n\r\nconst Header = ({ title }) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nconst ZilliqaTable = ({ tableData, headingColumns, title, breakOn = 'medium' }) => {\r\n    let tableClass = 'table-container__table'\r\n\r\n    if (breakOn === 'small'){\r\n        tableClass += ' table-container__table--break-sm';\r\n    } else if (breakOn === 'medium'){\r\n        tableClass += ' table-container__table--break-md';\r\n    } else if (breakOn === ' small'){\r\n        tableClass += ' table-container__table--break-sm'\r\n    }\r\n\r\n    const data = tableData.map((row, index) => {\r\n        let rowData = [];\r\n        let i = 0;\r\n        for (const key in row) {\r\n            rowData.push({\r\n                key: headingColumns[i],\r\n                val: row[key]\r\n            });\r\n            i++;\r\n        }\r\n\r\n        return <tr key={index}>\r\n            {rowData.map((data,index) => <td key={index} data-heading={data.key}>{data.val}</td>)}\r\n        </tr>\r\n    });\r\n\r\n    return(\r\n        <div className=\"table-container\">\r\n            <div className=\"table-container__title\">\r\n                <h2>{title}</h2>\r\n            </div>\r\n            <Table striped bordered hover variant=\"light\" className={tableClass}>\r\n                <thead>\r\n                    <tr>\r\n                        {headingColumns.map((col,index) => (\r\n                            <th key={index}>{col}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ZilliqaTable","import React, { Component } from \"react\";\r\nimport ZilliqaTable from \"./ZilliqaTable\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst ZilliqaRecord = props => {\r\n    const { compoundWeekly, zilPerDay, zilPerWeek, zilPerMonth } = props.item;\r\n\r\n    const JsonSerializer = (data) => { \r\n        let serializedData =[];\r\n        // to be in this format { week: , compounded: , zilperday: , zilperWeek, zilperMonth }\r\n        for (let i=0; i<compoundWeekly.length; i++){\r\n            let cmp = compoundWeekly[i];\r\n            let zpd = zilPerDay[i];\r\n            let zpw = zilPerWeek[i];\r\n            serializedData.push({  'week': `${parseInt(i)}`, \r\n                                   'compound': `${compoundWeekly[i]}`,\r\n                                   'zilperDay': `${zilPerDay[i]}`, \r\n                                   'zilperWeek': `${zilPerWeek[i]}`, \r\n                                   'zilperMonth': `${zilPerMonth[i]}`\r\n                                })\r\n        }\r\n        return serializedData;\r\n    }\r\n\r\n    return (\r\n        <ZilliqaTable \r\n            tableData={JsonSerializer(props.item)}\r\n            headingColumns={['Week', 'Compound', 'ZilPerDay', 'ZilPerWeek', 'ZilPerMonth']}            \r\n            title=\"Zilliqa Compounded Earnings\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default ZilliqaRecord","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ZilliqaRecord from './ZilliqaRecord';\r\n\r\n\r\nclass ZilliqaCompound extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            capital: '',\r\n            weeks: '',\r\n            apy: '',\r\n            total: '',\r\n            results:\r\n                {\r\n                    compoundWeekly: [],\r\n                    zilPerDay: [],\r\n                    zilPerWeek: [],\r\n                    zilPerMonth: [],\r\n                }\r\n        };\r\n    };\r\n\r\n\r\n    handleCapital = e => {\r\n        this.setState({ capital: e.target.value })\r\n    }\r\n\r\n    handleWeeks = e => {\r\n        this.setState({ weeks: e.target.value })\r\n    }\r\n\r\n    handleApy = e => {\r\n        this.setState({ apy: e.target.value })\r\n    }\r\n\r\n    zilliqaPerDay = (capital, apy) => {\r\n        let percentPerDay = apy / 36600;\r\n        return (capital * percentPerDay).toFixed(2);\r\n    }\r\n\r\n    zilliqaPerWeek = (zilPerDay) => {\r\n        return (zilPerDay * 14).toFixed(2);\r\n    }\r\n\r\n    zilliqaPerMonth = (zilPerWeek) => {\r\n        return (zilPerWeek * 30).toFixed(2);\r\n    }\r\n\r\n    zilliqaCompoundWeekly = (capital, weeks, apy) => {\r\n        let sum = capital;\r\n        let compounded = [];\r\n        let perDay = [];\r\n        let perWeek = [];\r\n        let perMonth = [];\r\n        for (let i=0; i<=weeks; i++){\r\n            compounded.push(sum.toFixed(2))\r\n            perDay.push(this.zilliqaPerDay(sum,apy));\r\n            perWeek.push(this.zilliqaPerWeek(this.zilliqaPerDay(sum,apy)));\r\n            perMonth.push(this.zilliqaPerMonth(this.zilliqaPerWeek(this.zilliqaPerDay(sum,apy))));\r\n            sum += (this.zilliqaPerWeek(this.zilliqaPerDay(sum, apy)) * Math.pow(i, 0)) - 10;\r\n        }\r\n        this.setState(prevState => ({ results: {compoundWeekly: compounded,\r\n                                                zilPerDay: perDay,\r\n                                                zilPerWeek: perWeek,\r\n                                                zilPerMonth: perMonth\r\n                                            }}));\r\n\r\n    }\r\n\r\n    compileForm = e => {\r\n        e.preventDefault();\r\n        //if monthly\r\n                //code here\r\n        //if weekly\r\n        this.zilliqaCompoundWeekly(parseFloat(this.state.capital),\r\n                                    parseInt(this.state.weeks), \r\n                                    parseFloat(this.state.apy));\r\n    }\r\n\r\n    clearList = e => {\r\n        this.setState({\r\n            capital: '',\r\n            weeks: '',\r\n            apy: '',\r\n        })\r\n    }\r\n\r\n    render(){\r\n        // const bulletedRecords = this.state.results.compoundWeekly.map((e,i) => {\r\n        //     return(\r\n        //         <SingleZilliqaRecord item={e.toFixed(2)} index={i}/>\r\n        //     )\r\n        // })\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.compileForm}>\r\n                Total Zil: \r\n                <input type='text' placeholder=\"Enter initial capital\" value={this.state.capital} onChange={this.handleCapital}/>\r\n                Weeks\r\n                <input type='text' placeholder=\"Enter Weeks\" value={this.state.weeks} onChange={this.handleWeeks}/>\r\n                APY\r\n                <input type='text' placeholder=\"Enter APY\" value={this.state.apy} onChange={this.handleApy}/>\r\n                <Button type=\"submit\">Calculate</Button>\r\n                <Button variant='danger' onClick={this.clearList}>Clear List</Button>\r\n                </form>\r\n\r\n                { this.state.results.compoundWeekly.length === 0? \"no values yet\" : <ZilliqaRecord item={this.state.results}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ZilliqaCompound;\r\n\r\n","import React, { Component } from 'react';\r\nimport Header from './components/Header';\r\nimport SingleTodo from './SingleTodo';\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport ZilliqaCompound from './components/ZilliqaCompound';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      todos: [],\r\n      currentTodo: \"\"\r\n    };\r\n  }\r\n\r\n  onClick = () => {\r\n    let todosCopy = this.state.todos.slice();\r\n    todosCopy.push(this.state.currentTodo);\r\n\r\n    this.setState({ todos: todosCopy, currentTodo: \"\"})\r\n  }\r\n\r\n  deleteTodo = i => {\r\n    let todosCopy = this.state.todos.slice();\r\n\r\n    todosCopy.splice(i, 1);\r\n\r\n    this.setState({ todos: todosCopy });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header title=\"Zilliqa Compound Calculator v2\"/>\r\n        <ZilliqaCompound/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}