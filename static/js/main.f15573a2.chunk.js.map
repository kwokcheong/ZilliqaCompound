{"version":3,"sources":["components/Header.js","components/ZilliqaTable.js","components/ZilliqaRecord.js","components/ZilliqaCompound.js","components/CoinAPI.js","App.js","index.js"],"names":["Header","title","className","ZilliqaTable","tableData","headingColumns","breakOn","tableClass","data","map","row","index","rowData","i","key","push","val","data-heading","Table","striped","bordered","variant","col","ZilliqaRecord","props","console","log","item","state","compoundWeekly","zilPerDay","zilPerWeek","zilPerMonth","price","this","getCoin","interval","setInterval","axios","get","params","vs_currency","ids","then","response","setState","prevState","current_price","clearInterval","serializedData","length","parseInt","parseFloat","toFixed","JsonSerializer","Component","ZilliqaCompound","handleCapital","e","capital","target","value","handleWeeks","weeks","handleApy","apy","zilliqaPerDay","zilliqaPerWeek","zilliqaPerMonth","zilliqaCompoundWeekly","sum","compounded","perDay","perWeek","perMonth","Math","pow","results","compileForm","preventDefault","clearList","total","Form","onSubmit","Row","Col","Label","Control","type","placeholder","onChange","Button","onClick","CoinAPI","coin1","coins","App","coinsAPI","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f15573a2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = ({ title }) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nconst ZilliqaTable = ({ tableData, headingColumns, title, breakOn = 'medium' }) => {\r\n    let tableClass = 'table-container__table'\r\n\r\n    if (breakOn === 'small'){\r\n        tableClass += ' table-container__table--break-sm';\r\n    } else if (breakOn === 'medium'){\r\n        tableClass += ' table-container__table--break-md';\r\n    } else if (breakOn === ' small'){\r\n        tableClass += ' table-container__table--break-sm'\r\n    }\r\n\r\n    const data = tableData.map((row, index) => {\r\n        let rowData = [];\r\n        let i = 0;\r\n        for (const key in row) {\r\n            rowData.push({\r\n                key: headingColumns[i],\r\n                val: row[key]\r\n            });\r\n            i++;\r\n        }\r\n\r\n        return <tr key={index}>\r\n            {rowData.map((data,index) => <td key={index} data-heading={data.key}>{data.val}</td>)}\r\n        </tr>\r\n    });\r\n\r\n    return(\r\n        <div className=\"table-container\">\r\n            <div className=\"table-container__title\">\r\n                <h2>{title}</h2>\r\n            </div>\r\n            <Table striped bordered variant=\"dark\" className={tableClass}>\r\n                <thead>\r\n                    <tr>\r\n                        {headingColumns.map((col,index) => (\r\n                            <th key={index}>{col}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ZilliqaTable","import React from \"react\";\r\nimport ZilliqaTable from \"./ZilliqaTable\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from \"axios\"\r\nimport { Component } from 'react'\r\n\r\n\r\nclass ZilliqaRecord extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        console.log(this.props.item)\r\n        this.state = {\r\n            compoundWeekly: this.props.item.compoundWeekly,\r\n            zilPerDay: this.props.item.zilPerDay,\r\n            zilPerWeek: this.props.item.zilPerWeek,\r\n            zilPerMonth: this.props.item.zilPerMonth,\r\n            price: 0\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getCoin();\r\n        this.interval = setInterval(() => {\r\n            this.getCoin();\r\n        }, 1000)\r\n    }\r\n\r\n    getCoin(){\r\n        axios.get('https://api.coingecko.com/api/v3/coins/markets', {\r\n        params: {\r\n            vs_currency: \"sgd\",\r\n            ids: \"zilliqa\"\r\n            },\r\n        }).then(response => \r\n            this.setState(prevState => ({ \r\n                price: response.data[0].current_price})));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    JsonSerializer(data){ \r\n        let serializedData =[];\r\n        // to be in this format { week: , compounded: , zilperday: , zilperWeek, zilperMonth }\r\n        for (let i=0; i<this.props.item.compoundWeekly.length; i++){\r\n            serializedData.push({  'week': `${parseInt(i)}`, \r\n                                   'compound': `${this.props.item.compoundWeekly[i]}`,\r\n                                   'zilperDay': `${this.props.item.zilPerDay[i]}`,\r\n                                   '$SGDperDay': `${parseFloat(this.props.item.zilPerDay[i] * this.state.price).toFixed(2)}`,\r\n                                   'zilperWeek': `${this.props.item.zilPerWeek[i]}`, \r\n                                   '$SGDperWeek': `${parseFloat(this.props.item.zilPerWeek[i] * this.state.price).toFixed(2)}`,\r\n                                   'zilperMonth': `${this.props.item.zilPerMonth[i]}`,\r\n                                   '$SGDperMonth': `${parseFloat(this.props.item.zilPerMonth[i] * this.state.price).toFixed(2)}`\r\n                                })\r\n        }\r\n        return serializedData;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <ZilliqaTable \r\n                tableData={this.JsonSerializer(this.props.item)}\r\n                headingColumns={['Week', 'Compound', 'Daily', '$SGD Per Day', 'Weekly', '$SGD Per Week', 'Monthly', '$SGD Per Month']}            \r\n                title=\"Zilliqa Compounded Earnings\"\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ZilliqaRecord","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ZilliqaRecord from './ZilliqaRecord';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n\r\nclass ZilliqaCompound extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            capital: '',\r\n            weeks: '',\r\n            apy: '',\r\n            total: '',\r\n            results:\r\n                {\r\n                    compoundWeekly: [],\r\n                    zilPerDay: [],\r\n                    zilPerWeek: [],\r\n                    zilPerMonth: [],\r\n                }\r\n        };\r\n    };\r\n\r\n\r\n    handleCapital = e => {\r\n        this.setState({ capital: e.target.value })\r\n    }\r\n\r\n    handleWeeks = e => {\r\n        this.setState({ weeks: e.target.value })\r\n    }\r\n\r\n    handleApy = e => {\r\n        this.setState({ apy: e.target.value })\r\n    }\r\n\r\n    zilliqaPerDay = (capital, apy) => {\r\n        let percentPerDay = apy / 36600;\r\n        return (capital * percentPerDay).toFixed(2);\r\n    }\r\n\r\n    zilliqaPerWeek = (zilPerDay) => {\r\n        return (zilPerDay * 7).toFixed(2);\r\n    }\r\n\r\n    zilliqaPerMonth = (zilPerWeek) => {\r\n        return (zilPerWeek * 4).toFixed(2);\r\n    }\r\n\r\n    zilliqaCompoundWeekly = (capital, weeks, apy) => {\r\n        let sum = capital;\r\n        let compounded = [];\r\n        let perDay = [];\r\n        let perWeek = [];\r\n        let perMonth = [];\r\n        for (let i=0; i<=weeks; i++){\r\n            compounded.push(sum.toFixed(2))\r\n            perDay.push(this.zilliqaPerDay(sum,apy));\r\n            perWeek.push(this.zilliqaPerWeek(this.zilliqaPerDay(sum,apy)));\r\n            perMonth.push(this.zilliqaPerMonth(this.zilliqaPerWeek(this.zilliqaPerDay(sum,apy))));\r\n            sum += (this.zilliqaPerWeek(this.zilliqaPerDay(sum, apy)) * Math.pow(i, 0)) - 10;\r\n        }\r\n        this.setState(prevState => ({ results: {compoundWeekly: compounded,\r\n                                                zilPerDay: perDay,\r\n                                                zilPerWeek: perWeek,\r\n                                                zilPerMonth: perMonth\r\n                                            }}));\r\n\r\n    }\r\n\r\n    compileForm = e => {\r\n        e.preventDefault();\r\n        //if monthly\r\n                //code here\r\n        //if weekly\r\n        this.zilliqaCompoundWeekly(parseFloat(this.state.capital),\r\n                                    parseInt(this.state.weeks), \r\n                                    parseFloat(this.state.apy));\r\n    }\r\n\r\n    clearList = e => {\r\n        this.setState({\r\n            capital: '',\r\n            weeks: '',\r\n            apy: '',\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Form onSubmit={this.compileForm}>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Label>Total Amount of Zil</Form.Label>\r\n                            <Form.Control type='text' placeholder=\"Enter initial capital\" value={this.state.capital} onChange={this.handleCapital}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Label>No of Weeks</Form.Label>\r\n                            <Form.Control type='text' placeholder=\"Enter Weeks\" value={this.state.weeks} onChange={this.handleWeeks}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Label>APY</Form.Label>                        \r\n                            <Form.Control type='text' placeholder=\"Enter APY\" value={this.state.apy} onChange={this.handleApy}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Button variant='info' type=\"submit\">Calculate</Button>\r\n                            <Button variant='secondary' onClick={this.clearList}>Clear List</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n                \r\n\r\n                { this.state.results.compoundWeekly.length === 0? \"\" : <ZilliqaRecord item={this.state.results}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ZilliqaCompound;\r\n\r\n","import React from 'react'\r\nimport axios from \"axios\"\r\nimport { Component } from 'react'\r\n\r\nclass CoinAPI extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            coin1: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCoin();\r\n        this.interval = setInterval(() => {\r\n            this.getCoin();\r\n        }, 1000)\r\n    }\r\n\r\n    getCoin(){\r\n        axios.get('https://api.coingecko.com/api/v3/coins/markets', {\r\n        params: {\r\n            vs_currency: \"sgd\",\r\n            ids: \"zilliqa\"\r\n            },\r\n        }).then(response => \r\n            this.setState(prevState => ({ \r\n                coins: response.data[0].current_price})));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div><h1>{this.state.coins}</h1></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CoinAPI\r\n\r\n","import React, { Component } from 'react';\r\nimport Header from './components/Header';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport ZilliqaCompound from './components/ZilliqaCompound';\r\nimport CoinAPI from './components/CoinAPI.js';\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      coinsAPI:\r\n       {\r\n          coins: \"digibyte\",\r\n          vs_currency: \"sgd\"\r\n       }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header title=\"Zilliqa Compound Calculator v2\"/>\r\n        <ZilliqaCompound/>\r\n        <CoinAPI data={this.state.coinsAPI}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}